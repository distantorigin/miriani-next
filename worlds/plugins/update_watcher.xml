<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<muclient>
<plugin
   name="update_watcher"
   author="distantorigin"
   id="79772f9b67c1e42f22a3eb95"
   language="Lua"
   purpose="Watches for updates and handles post-install routines"
   requires="5.07"
   version="1.0"
   save_state="y"
>
<description trim="y">
Watches for .update-result file in the MUSHclient directory.
When found, processes update results and reloads plugins as needed.
</description>
</plugin>

<timers>
  <timer
   enabled="y"
   second="1.00"
   offset_second="0.00"
   active_closed="y"
   script="check_update_result"
   send_to="14"
  >
  </timer>
</timers>

<script>
<![CDATA[

function OnPluginInstall()
  -- Check immediately on startup
  check_update_result()
end

function check_update_result()
  local path = require("pl.path")
  local homedir = GetInfo(66)  -- MUSHclient directory
  local update_result_file = path.join(homedir, ".update-result")

  if path.isfile(update_result_file) then
    process_update_result(update_result_file)
  end
end

function process_update_result(filepath)
  -- Read the file
  local file = io.open(filepath, "r")
  if not file then
    Note("Error: Could not read .update-result file")
    os.remove(filepath)
    return
  end

  local content = file:read("*all")
  file:close()

  -- Parse JSON
  local json = require("json.decode")
  local ok, data = pcall(json.decode, content)

  if not ok or not data then
    Note("Error: Malformed .update-result file")
    os.remove(filepath)
    return
  end

  -- Handle based on result
  if data.result == "Success" then
    handle_success(data)
  elseif data.result == "Failure" then
    handle_failure(data)
  else
    Note("Error: Unknown result in .update-result: " .. tostring(data.result))
  end

  -- Delete the file after processing
  os.remove(filepath)
end

function handle_success(data)
  local restarted = data.restarted == "true" or data.restarted == true

  if restarted then
    DoAfterSpecial(7, [[
      local version = "]] .. (data.version or "unknown") .. [["
      Note("Update successful! Welcome to version " .. version)
    ]], sendto.script)
  else
    -- Show notification and reload plugins
    local files_updated = data.files_updated or {}
    local files_added = data.files_added or {}
    local files_deleted = data.files_deleted or {}

    local total_updated = #files_updated
    local total_added = #files_added
    local total_deleted = #files_deleted

    -- Build grammatically correct notification
    local parts = {}

    if total_updated > 0 then
      local file_word = total_updated == 1 and "file was" or "files were"
      table.insert(parts, total_updated .. " " .. file_word .. " updated")
    end

    if total_added > 0 then
      local file_word = total_added == 1 and "file was" or "files were"
      table.insert(parts, total_added .. " " .. file_word .. " added")
    end

    if total_deleted > 0 then
      local file_word = total_deleted == 1 and "file was" or "files were"
      table.insert(parts, total_deleted .. " " .. file_word .. " deleted")
    end

    if #parts > 0 then
      local message = table.concat(parts, ", ")
      Note("Update complete: " .. message .. ". Reloading...")
      reload_all_plugins()
BroadcastPlugin(777, "success")
    else
      Note("Update complete with no file changes.")
BroadcastPlugin(777, "success")
    end
  end
end

function handle_failure(data)
  if data.message then
    ColourNote("red", "", "Update failed: " .. data.message)
  else
    ColourNote("red", "", "Update failed with unknown error")
  end
end

function reload_all_plugins()
  local pid = GetPluginID()
  local plugins = GetPluginList()

  for _, id in ipairs(plugins) do
    if id ~= pid then
      local ok, msg = ReloadPlugin(id)
      if ok ~= 0 then
        -- Could not reload
        Note("Warning: Could not reload plugin " .. id .. ": " .. tostring(msg))
      end
    end
  end
end

]]>
</script>
</muclient>
